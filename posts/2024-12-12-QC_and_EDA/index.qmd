---
title: "Exploratory Data Analysis for RNA-seq data"
description: ""
author:
  - name: Daianna Gonzalez-Padilla
date: 2024-12-12
categories:
  - "TODO"
  
image: "images/TODO"
bibliography: references.bib
---

⚠️ This page is under development.

# Introduction

# What you'll learn here

# An example data set

## Download data

We'll use [*recount3*](https://rna.recount.bio) [@leonardocollado-torres2020; @wilks2021a] package to download real gene expression data from a transcriptomic study, including sample metadata and QC metrics that will be helpful to illustrate variable associations with gene expression levels.

The chosen study can be found in the Sequence Read Archive ([SRA](https://www.ncbi.nlm.nih.gov/sra)) under ID `SRP107565`, and is titled "**Multiomics Profiling Establishes the Polypharmacology of FDA-Approved CDK4/6 Inhibitors and the Potential for Differential Clinical Activity"** ([Marc Hafner et al., 2019](10.1016/j.chembiol.2019.05.005)).

```{r download_data, warning=FALSE, message=FALSE}
library(recount3)

## Download all available projects in human in recount3
human_projects <- available_projects()

## Download gene expression data and metadata from 
proj_info <- subset(
    human_projects,
    project == "SRP107565" & project_type == "data_sources",
    recount3_url = "https://sciserver.org/public-data/recount3/data"
)

proj_info

## Create RangedSummarizedExperiment object to handle RNA-seq and sample data 
rse <- create_rse(proj_info)

## Gene expression data in assay(rse): for first 5 genes and 5 samples
assay(rse)[1:5, 1:5]

## Sample metadata in colData(rse): for first 6 samples and 3 variables
head(colData(rse)[, 1:3])

## Gene data in rowData(rse): for first 6 genes and 3 variables
head(rowData(rse)[, 1:3])

```

## Study design and objectives

In this study, the authors performed transcriptomic, proteomic, and phenotypic assays to compare the activities of 3 inhibitors of cyclin-dependent kinases 4/6 (CDK4/6): abemaciclib, palbociclib, and ribociclib, which are used to treat hormone receptor-positive breast cancer. For our purposes, only transcriptomic data have been downloaded to be explored.

Specifically, in the transcriptomic experiment, 7 breast cancer human cell lines were drug-treated with [**0.3**]{style="color: #EE7621"}, [**1**]{style="color: #CD3700"} OR [**3**]{style="color: #8B2500"} µM of [**abemaciclib**]{style="color: #0000FF"}, [**palbociclib**]{style="color: #EE3B3B"}, OR [**ribociclib**]{style="color: #CDC673"} (OR untreated = [**control**]{style="color: #A6A6A6"} **=** drug concentration of [**0**]{style="color: #A6A6A6"} µM), and mRNA sequencing was performed after **6** OR [**24**]{style="color: #00CD66"} hrs of exposure.

![Ilustration taken from **Figure 1A** in [Marc Hafner et al., 2019](10.1016/j.chembiol.2019.05.005).](images/study_design.png){fig-align="center" width="363"}

Exploring the [*RangedSummarizedExperiment*](https://www.bioconductor.org/packages/devel/bioc/vignettes/SummarizedExperiment/inst/doc/SummarizedExperiment.html) [@martinmorgan2017; @huber2015] object `rse` we just created, we can see we have raw expression data for 63,856 genes across 216 samples.

```{r}
dim(rse)
```

Processing a little the sample attributes contained in `sra.sample_attributes` variable, we can check the number of samples from each cell line, treated with each drug, at each concentration, and time. Let's add individual columns in the sample metadata for these variables.

```{r}
library(tidyr)

## Sample attributes
head(rse$sra.sample_attributes, 3)

## Divide each string by "|" and extract drug
rse$Drug = sapply(rse$sra.sample_attributes, function(x){strsplit(strsplit(x, "\\|")[[1]][1], ";;")[[1]][2]}) %>% unname

## Num of samples treated with each drug
table(rse$Drug)

## Num of samples of each cell line
rse$Cell_line = sapply(rse$sra.sample_attributes, function(x){strsplit(strsplit(x, "\\|")[[1]][2], ";;")[[1]][2]}) %>% unname

table(rse$Cell_line)

## Num of samples treated with each dose
rse$Concentration =  sapply(rse$sra.sample_attributes, function(x){strsplit(strsplit(x, "\\|")[[1]][3], ";;")[[1]][2]}) %>% unname

table(rse$Concentration)

## Num of samples sequenced after each time
rse$Time =  sapply(rse$sra.sample_attributes, function(x){strsplit(strsplit(x, "\\|")[[1]][5], ";;")[[1]][2]}) %>% unname

table(rse$Time)
```

## Data variables

The following are quality control metrics collected in recount3
