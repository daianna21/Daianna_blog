---
title: "What comes first: count normalization or gene/sample filtering?"
description: ""
author:
  - name: Daianna Gonzalez-Padilla
date: 2024-12-12
categories:
  - "Normalization"
  - "Filtering"
  - "Trimmed Mean of M values"
  - "Lowly-expressed genes"
  - "Low-quality samples"
  - "RNA-seq"
  
image: "images/TODO"
bibliography: references.bib
---

⚠️ This page is under development.

# Introduction

One of my biggest questions while analyzing RNA-seq data has always been if I should first filter lowly-expressed genes and poor-quality samples and then normalize raw counts, or in what order these steps should be executed. Is there an order to follow irrespective of the filtering and normalization methods used? Does the order actually matter?

As you can imagine, if I'm writting this post is because I haven't found a clear answer to all these questions. In my search I have gained more doubts than answers, but I have realized this is not an unaddressed issue but a hard one to close. With this post demonstrations I can finally say the order does matter, but it depends on the methodologies applied for filtering and normalizing.

In this post I will show the implications of the ordering of filtering and normalization steps, depending on the methods and metrics used for these analyses, with special attention to the TMM normalization method. I will offer warnings and practical recommendations for you to proceed with your analysis without racking you brain about it.

# What you'll learn here

# An example data set

Using [*recount3*](https://rna.recount.bio) [@leonardocollado-torres2020; @wilks2021a] we will download data from a study ([Marc Hafner et al., 2019](10.1016/j.chembiol.2019.05.005); SRA ID: `SRP107565`) where 216 bulk samples were sequenced to examine the transcriptomic changes induced by 3 drugs for treating breast cancer.

```{r download_data, warning=FALSE, message=FALSE}
library(recount3)

## Download all available projects in human in recount3
human_projects <- available_projects()

## Download gene expression data and metadata from SRP107565 study
proj_info <- subset(
    human_projects,
    project == "SRP107565" & project_type == "data_sources",
    recount3_url = "https://sciserver.org/public-data/recount3/data"
)

proj_info

## Create RangedSummarizedExperiment object to handle RNA-seq and sample data 
rse <- create_rse(proj_info)

## Gene expression data in assay(rse): for first 5 genes and 5 samples
assay(rse)[1:5, 1:5]

## Sample metadata in colData(rse): for first 6 samples and 3 variables
head(colData(rse)[, 1:3])

## Gene data in rowData(rse): for first 6 genes and 3 variables
head(rowData(rse)[, 1:3])

```

In the [*RangedSummarizedExperiment*](https://www.bioconductor.org/packages/devel/bioc/vignettes/SummarizedExperiment/inst/doc/SummarizedExperiment.html) [@martinmorgan2017; @huber2015] object (`rse`) there are raw expression data for 63,856 genes across the 216 samples.

```{r rse_dim}
dim(rse)
```

# Normalization

In order to compare gene expression measures between samples of two or more experimental groups, normalization of raw counts is required to correct for between-sample technical differences, such as sequencing depth. Various normalization methods have been proposed, each relying on specific methodological assumptions \[\].

One of the most commonly adopted schemes is the trimmed mean of M values method.

#### **Normalization Methods on RNA-Seq:**

#### - <https://pmc.ncbi.nlm.nih.gov/articles/PMC4484837/>

-   <https://academic.oup.com/bib/article/19/5/776/3056951>

Comparison of normalization methods

-   <https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-015-2353-z>

## Counts per million

## TMM

<https://pmc.ncbi.nlm.nih.gov/articles/PMC2864565/pdf/gb-2010-11-3-r25.pdf>

# Filtering lowly-expressed genes

## CPM cuttoff

## filterByExpr

# Filtering low-quality samples

## QC metrics based on raw/log-normalized counts

## QC metrics based on all/expressed genes

Samples are required in the filtering process and in TMM (sample vs sample comparison; in CPM library sizes are computed independently)

For sample outlier detection we run PCA with normalized and filtered counts.

It depends on if we have prior knowledge of the samples quality and if those QC metrics that are outliers imply that the RNA composition is atypical or problematic: we can plot that and compare. If there are few samples they are not likely to affect downstream results.

# The order matters

What comes first normalization or filtering of genes and samples? Is TMM afected by filtering genes and samples?

Cases:

1.  Filtering genes –\> filtering samples –\> normalization (with librari size only OR TMM)
2.  Filtering genes –\> normalization –\> filtering samples
3.  Filtering samples –\> filtering genes –\> normalization
4.  Filtering samples –\> normalization –\> filtering genes
5.  Normalization –\> filtering samples –\> filtering genes
6.  Normalization –\> filtering genes –\> filtering samples

#### 

Order or norm and filtering:

-   <https://support.bioconductor.org/p/116351/#:~:text=If%20you%20must%20filter%20on,same%20procedure%20as%20described%20above.>

-   <https://support.bioconductor.org/p/123624/>

**TMM normalization with low counts (why an initial round of filtering is required before TMM):**

-   <https://ltla.github.io/ChIPSeqThoughts/lowcount_norm/lowcount_norm.html>
