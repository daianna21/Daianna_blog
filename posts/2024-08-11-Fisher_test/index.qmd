---
title: "Fisher's exact test for enrichment analysis of gene sets"
description: |
 A complete and interpretable explanation of the Fisher's exact test in the context of gene set-based enrichment analysis. The genomic applicability of this test is exemplified with a functional enrichment analysis for DEGs. 
author:
  - name: Daianna Gonzalez-Padilla
date: 2024-07-12
categories:
  - "Fisher's exact test"
  - "overrepresentation"
  - "ORA"
  - "enrichment"
  - "Gene Set Enrichment Analysis"
  - "GO"
  - "KEGG"
  - "Functional enrichment"
image: ""
bibliography: references.bib
---

# Introduction

Imagine you have analyzed high-throughput omics data and have ended up with a list of candidate/interest genes (because everything is more interpretable at the gene level, isn’t?). These genes could be, for instance, differently expressed genes (DEGs), genes associated with a certain disease, genes affected by risk SNPs, markers for cell types, etc. Any list of **experimentally-derived genes** with biological or clinical relevance applies.

Now, what comes after that? If you found a few genes, you can do a little of research about them and make sense of your results, but what if you got thousands of genes? That's not an easy task anymore and becomes unscalable. Moreover, despite each individual found gene providing valuable information, we can reveal more definite insights by studying all genes at the same time.

So what’s to do? We need to start thinking of these **genes as a unique [set]{.underline}** with its own properties, and ask questions such as *what do these genes have in common?* *what makes them being involved or affected by the condition under study*, and *what does that imply for cell functionality?*

**Functional enrichment analysis** based on the [**one-sided Fisher's exact test**]{style="background-color: #FFF68F"} aims to test whether [**our genes [as a set]{.underline}**]{style="color: #FF4500"} are associated with certain cellular properties or functions by assessing if *sets of known genes that share biological activities or attributes* ([**functional gene sets**]{style="color: #1C86EE"}), have a statistically significant **large overlap** with our genes, i.e., if such functional gene sets are, what we call [**over-represented**]{.underline} (or [**enriched**]{.underline}, which is the same), among our genes. Stay on this post to learn more about how this test operates and how to understand and apply it to analyze sets of genes.

# What you'll learn here

1.  Comprehend the purpose and the basic operation of a functional enrichment analysis based on gene sets.
2.  Understand the probabilistic and statistic foundations of the Fisher's exact test and interpret it with genes and gene sets.
3.  Clarify the required input data to correctly perform this analysis.
4.  Learn how to run this test using R.
5.  Differentiate **enrichment** vs. **depletion** when performing this test.

# The Fisher's exact test

This is a classical statistical test based on the hypergeometric distribution (thus also called **hypergeometric test**) used to assess if there is a significant association between two categorical binary variables, such as differential expression of the genes and their involvement in a specific biological process. The association of the two variables is calculated in terms of the intersection size between their elements.

For illustrative purposes to show the application of this test for gene set-based functional enrichment analysis, imagine we have run a differential gene expression analysis (DGE) for a condition and have obtained a list of DEGs. As part of downstream analyses, we want to know how many of such DEGs participate in a specific biological process of interest and if that number is significantly greater than the number of non-DEGs that are also involved in the process, and DEGs that don't participate. This is what it means to test for enrichment.

In the next sections we'll go into more detail on how to demarcate the required sets of genes, represent them in contingency tables, assess enrichment (or depletion) in R, and how to interpret this test and its results.

## 1. Creating and understanding contingency tables

The following are the required gene sets and their specifications. Please note that when referring to a set of genes, we are specifically referring to the set of gene IDs; that all we need to run this test!

-   [**Gene universe/back**]{style="color: #595959"}[**gro**]{style="color: #595959"}[**und**]{style="color: #595959"}: these are all the genes that were experimentally measured and interrogated to generate the list of interest genes ([**our gene set**]{style="color: #FF4500"}). In our hypothetical scenario this is given by all genes that were assessed for DGE: all genes that can be classified as either DEG or non-DEG.

    → Let's denote as "DE" the variable defining if a gene is differentially expressed (DEG) or not (non-DEG).

    ::: callout-tip
    ## How to find my gene universe?

    Since we are testing enrichment of functional gene sets among our DEGs, and not the other way around, our “gene universe” must correspond to the total number of genes for which we assessed DGE. Within those genes, categorized by DE, we search for genes contained in a functional set.
    :::

-   [**Our gene set**]{style="color: #FF4500"}: a list of interest genes derived from our experimental measurements and analyses, and to which we want to assign biological meanings. In our hypothetical case this is the list of DEGs from the [**gene universe**]{style="color: #595959"}.

-   [**Functional gene set**]{style="color: #1C86EE"}: a set of genes with shared biological attributes (e.g. participation in a pathway, implication in the same biological process, sharing a molecular activity, or if their gene products are located in a certain cell compartment). Conveniently, functional gene sets are accessible via databases such as [Gene Ontology (GO)](https://geneontology.org) [@ashburner2000] and the [Kyoto encyclopedia of genes and genomes (KEGG)](https://www.kegg.jp) [@kanehisa2000].

    → Let's denote as "BP" the variable determining if a gene is involved in a particular biological process (BP+) or not (BP-).

Fisher's exact test aims to detect functional gene sets whose genes are unusually represented (enriched/over-represented or under-represented) in our set of interest genes. That is, if there's a large (or small) overlap between the genes of the functional set (BP+ genes in this case) and the genes we classified as relevant from our data (DEGs in this case).

Following our hypothetical example, let's suppose we have analyzed DGE for a total of 32 genes and of these 15 were DEGs. Suppose we have a functional gene set containing 12 genes involved in a biological process (BP+) and of these 9 were DEGs. Having identified such gene sets, we proceed to create a **2x2 contingency table** showing the number of genes that belong to each category for each variable.

![](images/contingency_table_2.png){fig-align="center" width="365"}

The numbers of DEGs, non-DEGs, BP+ genes, and BP- genes are called the *marginal values*, as they lie on the periphery of this 2x2 table. The middle cells ($a$'s) are the *joint values*, as they contain the overlap between the categories of the two variables.

::: callout-note
Note that by changing only one joint value, say $a_{11}$, all the remaining joint values will be already determined since the marginals are fixed. In that way we can describe whole contingency tables with only their $a_{11}$ corner values.
:::

```{r}
## Define example gene universe: 32 total genes analyzed 
gene_universe <- c("Srsf5", "Gm15387", "Mprip", "Pim1", "Bnip3l", "Efr3a", "Marco", "Tuba1a", "Gsk3a",
                   "Dap3", "Tmod3", "Dnajb1", "Tulp4", "Lsm14b", "Khdrbs2", "Mfsd9", "Ufd1", "Ypel5",
                   "Rbm3", "Dnajc28", "Msrb2", "Memo1", "Cebpg", "Flywch1", "Ip6k1", "Nudt4", "Csnk1e",
                   "Qsox2", "Gm43517", "Rhbdf2", "Fbxw11", "Hmgxb4") 
length(gene_universe)

## Define 15 DEGs from universe
set.seed(08122024)
DEGs <- sample(gene_universe, 15, replace = FALSE)
DEGs
length(unique(DEGs))
## Remaining 17 non-DEGs
non_DEGs <- gene_universe[!gene_universe %in% DEGs]

## Example functional set of 12 BP+ genes (with 9 being DEGs)
funct_gene_set <- c(sample(DEGs, 9, replace = FALSE), sample(non_DEGs, 3, replace = FALSE))
length(unique(funct_gene_set))
## BP- genes
genes_not_func_set <- gene_universe[!gene_universe %in% funct_gene_set]

## Intersections:
# 1. DEGs and BP+ genes
DEGs_in_set <- intersect(DEGs, funct_gene_set)

# 2. non-DEGs and BP+ genes
non_DEGs_in_set <- intersect(non_DEGs, funct_gene_set)

# 3. DEGs and BP- genes
DEGs_not_in_set <- intersect(DEGs, genes_not_func_set)

# 4. non-DEGs and BP- genes
non_DEGs_not_in_set <- intersect(non_DEGs, genes_not_func_set)
  
## Create contingency table
m <- matrix(c(length(DEGs_in_set), length(DEGs_not_in_set), 
            length(non_DEGs_in_set), length(non_DEGs_not_in_set)), 
            byrow = TRUE, nrow = 2)
m
```

::: callout-important
When we test for "association" between DE and BP it could be either **positive** or **negative**, with the former implying a larger overlap between DEGs and BP+ genes, and thus corresponding to enrichment, and the latter implying a smaller overlap and thus meaning depletion. We'll also delve into the statistical implications of each type of association in the next section.
:::

## 2. Testing for gene-set enrichment

The Fisher's exact test is used to determine the probability of observing the joint value $a_{11}$ in our table or a more extreme value (for contingency tables with the same fixed marginal totals) under the null hypothesis ($H_0$) that there's no association between the categorical variables, i.e., that they are independent. These probabilities are referred to as *p*-values. Smaller probabilities offer strong evidence against the null hypothesis, which is translated into statistical evidence to accept the alternative hypothesis ($H_A$) of association between the two variables.

This is how it operates:

1.  Given the fixed marginal totals, we first we compute all possible contingency tables by enumerating all possible joint values $a_{11}$: in this case from 0 to 12, which are the min. and max. numbers of DEGs that can be in BP+, respectively.

    ![](images/all_tables.png){fig-align="center" style="margin: 0px" width="449"}

    ::: {style="background-color:#F2F2F2; padding: 15px; margin-bottom:0px"}
    | ❗️ The top left cell ($a_{11}$) of each table always corresponds to the joint value positive for both variables under examination (DEGs and BP+ genes).
    :::

    ![](images/white_space.png){style="margin: 0px" width="30" height="4"}

2.  Then we estimate the probability of having such joint values in each contingency table under the null hypothesis. To do that we need to calculate the number of ways of obtaining the joint values by randomness in the gene selection process. Only 3 values have to be estimated for that:

    1.  The ways of selecting $a_{11} + a_{12}$ =15 genes (corresponding to the number of DEGs) without replacement from the total genes in the gene universe: ${a_{11} + a_{12} + a_{21} + a_{22}} \choose a_{11} + a_{12}$

        ![](images/choose_15_32.png){fig-align="center" width="357"}

    2.  The ways of selecting $a_{11}$ =9 genes (number of BP+ DEGs) without replacement out of the $a_{11} + a_{21}$ =12 genes in the functional set (BP+ genes): ${{a_{11} + a_{21}} \choose a_{11}}$

        ![](images/choose_12_9.png){fig-align="center" width="312"}

    3.  The ways of selecting $a_{12}$ =6 genes (number of BP- DEGs) without replacement out of the $a_{12}+a_{22}$ =20 genes not in the functional set (BP- genes): ${a_{12}+a_{22}}\choose{a_{12}}$

        ![](images/choose_20_6.png){fig-align="center" width="333"}

        With these 3 values we define the probability of each table arrangement:

        $$
         p=\frac{{{a_{11}+a_{21}}\choose a_{11}} \times {{a_{12}+a_{22}}\choose{a_{12}}} }{{a_{11}+a_{12}+a_{21}+a_{22}}\choose{a_{11}+a_{12}}}
        $$

        This is precisely the probability function for the [hypergeometric distribution](#0), used for sampling *without* replacement and which we use to test the null hypothesis.

        $$
        p(x)=\frac{{m \choose x} {n \choose {k-x}}}{{m+n}\choose k}
        $$

        -   $k$ is the sample size (number of DEGs) = $a_{11} + a_{12}$ = 15

        -   $m$ is the number of successes in the population (number of BP+ genes) = $a_{11} + a_{21}$ = 12

        -   $n$ is the number of failures in the population (number of BP- genes) = $a_{12} + a_{22}$ = 20

        -   $x$ is the number of successes in the sample (number of BP+ among DEGs) = $a_{11}$ = 9

        -   $k-x$ is the number of failures in the sample (number of BP- among DEGs) = $a_{12}$ = 6

        -   $m+n$ is the population size (size of gene universe) = $a_{11} + a_{12} + a_{21} + a_{22}$ = 32

::: {style="background-color:#F2F2F2; padding: 15px; margin-bottom:0px"}
| 💡 Basically, we are quantifying the number of ways of obtaining a sample of size $k$ composed of $x$ successes from a total of $m$ successes in the population ($m+n$) AND the remaining $k-x$ elements as failures from a total of $n$ failures in the population; of all possible ways of randomly selecting $k$ elements from the population. 
:::

![](images/white_space.png){style="margin: 0px" width="19" height="NaN"}

Transferred to our scenario, think of it as having 15 chances to select genes without replacement from the universe that contains both BP+ and BP- genes. Repeat the experiment multiple times and count the times 9 of the 15 genes were BP+ (out of 12 BP+ genes in total) and the remaining 6 genes BP- (out of 20 BP- genes in total), over the number of experiments; that approximates your probability. This probability describes how likely it is to observe your table numbers just by chance.

Let's see the density function for the hypergeometric distribution with the above parameters.

```{r}
library(ggplot2)

## Hypergeometric distribution parameters:
##  -x = 0:12 (a11 for all possible tables)
##  -m = 12 
##  -n = 20
##  -k = 15

probabilities <- dhyper(x=c(0:12), m=12, n=20, k=15, log = FALSE)
xs <- c(0:12)
df <- data.frame(x=xs, p=probabilities)
df 

# Bar plot
ggplot(df, aes(x=x, y=p, label=p)) +
     theme_classic() + 
     geom_bar(stat="identity", fill= "beige", colour="black") +
     geom_text(label=signif(probabilities, 2), 
							 y=probabilities, size=3, hjust=0.5, vjust=-1) +
     labs(x = "Number of BP+ DEGs", y = "Probability")
```

For our actual contingency table $p(x=9)=\frac{{12 \choose 9} \times {20\choose6}}{32\choose15}$:

```{r}
## Calculate manually
choose(12,9)*choose(20,6) / choose(32,15)
# [1] 0.001334633

```

### **One-sided test**

As mentioned before, we are not only interested in the probability of the observed contingency table but also in those for more extreme contingency tables, i.e., tables with greater $a_{11}$'s.

![](images/all_tables_extreme.png){fig-align="center" width="494"}

We add the probabilities of the actual table + the probabilities for such more extreme tables in order to get the probability of having 9 or more DEGs that are BP+ under the null hypothesis:

```{r}
sum(probabilities[10:13])

```

Since it is \<0.05, we reject the null hypothesis and accept that there's an enrichment of BP+ genes amongst our DEGs.

This is called a **one-sided Fisher's exact test** since we are evaluating probabilities of extreme values at only one side of the density curve (for values equal or greater than $a_{11}$=9; see plot below).

```{r}
## Color in red those x>=9
colors <- c(rep('beige', 9), rep('red', 4))
df$colors <- colors
ggplot(df, aes(x=x, y=p, label=p, fill=colors)) +
				theme_classic() +
				geom_bar(stat="identity", fill= colors, colour="black") +
				geom_text(label=signif(probabilities, 2),
									y=probabilities, size=3, hjust=0.5, vjust=-1) +
				labs(x = "Number of BP+ DEGs", y = "Probability")
```

We obtain the same result with `fisher.test(alternative = ”greater”)`:

```{r}
fisher.test(m, alternative = "greater")	
```

::: callout-note
Note that the results of this test are the same for the transposed matrix, so if we put one or the other variable in columns or rows doesn't affect as long as the first element of the table is the number of successes in the sample (BP+ DEGs). 

```{r}
## Matrix
m
## Transposed matrix
t(m)     

## Fisher test on t(m)
fisher.test(t(m), alternative = "greater")	
```
:::

## Assessing gene-set depletion?

What if we are not only interested in assessing the over-representation of gene sets in our experimentally derived gene list, but also in their under-representation? There may be fewer BP+ genes in the group of DEGs than expected by chance. In such case we'd be assessing for a negative association between the variables and we need to sum the probabilities of our table and those that are less extreme:

```{r}
## Color in red x<=9
colors <- c(rep('red', 10), rep('beige', 3))
df$colors <- colors

ggplot(df, aes(x=x, y=p, label=p, fill=colors)) +
				theme_classic() +
				geom_bar(stat="identity", fill= colors, colour="black") +
				geom_text(label=signif(probabilities, 2),
									y=probabilities, size=3, hjust=0.5, vjust=-1) +
				labs(x = "Number of BP+ DEGs", y = "Probability")
```

In this case we use `fisher.test(alternative = ”less”)`:

```{r}
## p-value:
sum(probabilities[1:10])

## Same with fisher.test(alternative = "less")
fisher.test(m, alternative = "less")	
```

## **Two-sided test**

The **two-sided Fisher’s exact test** looks at both tails of the hypergeometric distribution and thus is used when we want to assess both enrichment and depletion, if there's any association between the variables irrespective of the sign.

accounts for both enrichment and depletion.

An approach to account for extreme values on both sides is just to multiply by two the sum of the extreme tables' probabilities at one side (one-sided *p*-value):

❓ **What's the odds ratio?**

The odds ratio is defined as:

There may be cases in which you have some genes in your functional set that are not present in the gene universe; exclude them. Since they were not tested for DGE we cannot categorize them as DEGs or non-DEGs. There's no good reason to consider them as non-DEGs (except for the fact that most genes are and we often assume that).

# Conclusion

The one-sided Fisher's exact test is a broadly used test to assess the **enrichment** of gene sets of interest in a list of genes resulting from high-throughput experimental measurements, drawing potential biological implications of interest from such assays.

Even though here we focused on the Fisher's exact test, there are plenty of other approaches to assess functional enrichment \[\].

Secondly, I want to highlight that the use DEGs and functional gene sets to exemplify this analysis was based on the fact that this is a common scenario, but your sets don't necessarily have to be such. Now that you have the framework around this test, I'm sure you are much more prepared to decide if this is appropiate and suitable for your data; remember, as long as you have your universe of features, have defined a subset of all features that is of interest, and a second set of features defining a functional property for which you can compute the intersection with your data, then you can use this test.

Last reminder, Fisher's exact test works to test enrichemnt but also depletion, careful with how you run this analysis!

# Relevant links

1.  Functional enrichment analysis of omics data

    The Bioconductor 2018 Workshop Compilation, Chapter 9 <https://bioconductor.github.io/BiocWorkshops>

2.  Material from Bioc2020 (4th edition): <https://github.com/waldronlab/enrichOmics> <https://www.youtube.com/watch?v=n0vVwuQSZkg>
