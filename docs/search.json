[
  {
    "objectID": "index.html#a-little-about-me",
    "href": "index.html#a-little-about-me",
    "title": "Daianna Gonzalez-Padilla",
    "section": "A little about me",
    "text": "A little about me\n\nHey! Daianna here. I graduated from the undergraduate program of Genomic Sciences 🧬 at the National Autonomous University of Mexico 🇲🇽 LCG-UNAM in Cuernavaca, Morelos, Mexico in 2024. Currently I work at the Sanger Institute in Cambridge, U.K. analyzing single-cell data from iPSC-derived microglia to unveil the genetic architecture of neurodegenerative diseases.\nDuring the last few years I’ve been involved in multiple omics projects. At the Lieber Institute for Brain Development (LIBD) I analyzed transcriptomic data to explore brain develpment and function 🧠, and at the Karolinska Institutet (KI) I’ve studied genetic variability in genes influencing drug response and toxicity 💊. Along the way, with my undergrad courses and projects, analyzing and dealing with my own data, and attending courses, conferences, and meetings, I’ve learned about statistical analyses and bioinformatic tools and I wanted to share all this knowledge with the scientific community 👥, particularly with other students like me that may not have the same opportunities or academic background but also want to analyze datasets to answer biologically-relevant questions."
  },
  {
    "objectID": "index.html#motivation-for-this-website",
    "href": "index.html#motivation-for-this-website",
    "title": "Daianna Gonzalez-Padilla",
    "section": "Motivation for this website",
    "text": "Motivation for this website\n\n\n\n\n\n\nDoing scientific research, collaborating with my classmates and peers, and assisting in bioinformatics courses I’ve noticed the existence of two common problems while analyzing data:\n\nIn these interconnected times, with praiseworthy collaborative efforts such as the Bioconductor project we can easily develop, share, and use other people’s code, data, methods, and even complete packages for our own analyses. That represents an incredible opportunity for all of us to leverage, contribute, and improve popular and new-emerging computational tools for the reproducible analysis of biological data, no doubts! However, for students and early career researchers, and people coming from areas other than biostatistics, computational biology, or bioinformatics, some analyses may represent obscure –if not completely unknown– territories. People developing these algorithms often assume they have a specialized audience and tend to trivialize underlying statistical concepts and methods when describing their computational functions and packages, not to mention the poor or even missing documentation and support some of the authors offer (with notable exceptions such as limma and variancePartition, among others). \nSecond, nowadays it is incredibly simple to just run a complete pipeline with a single function. That’s efficient and increases productivity but it also has diluted the needed understanding behind their use. I have found many people, including myself, deludedly thinking we master an analysis just because we have run software programs without errors and have received outputs: we may dominate the practice but that doesn’t imply nor guarantees we understand the theory. \n\n\nIt seems to me we are a generation of trained students that know how to run an analysis and obtain results, but don’t understand the analyses themselves; in some occasions, not even the reasons why we execute them. But this is not limited to undergrad or master students: you would be surprised by the number of PhD students, postdocs, and researchers that relate to this!\n\n❗️❗️❗️ More alarming than the aforementioned I’d say, is not to be aware of why it is important to really understand the aims and foundations of the methods we implement. It is not until we do that, that we can make accurate and informed method selections based on the features of our data, detect unexpected and error-announcing results and interpret them correctly, map potential limitations of our analyses and draw rigorous meaningful conclusions from them."
  },
  {
    "objectID": "index.html#objectives",
    "href": "index.html#objectives",
    "title": "Daianna Gonzalez-Padilla",
    "section": "Objectives",
    "text": "Objectives\n\nThe purposes of the blog posts are the following:\n\nTo diminish those ◼️📦’s that many of these single-function methods represent, clearly showing how they operate mathematically and statistically.\nTo exemplify how to run these R/Bioconductor/Bash programs on real data, explaining their inputs and outputs, arguments and parameters. \nTo present the type of analyses you can implement with your own datasets to inspire you to explore further your data and outputs. \nTo show how to interpret the results.\n\nIn summary, this is a little of what I would have liked to read to feel more confident when applying a tool and explaining results derived from it."
  },
  {
    "objectID": "index.html#take-home-messages",
    "href": "index.html#take-home-messages",
    "title": "Daianna Gonzalez-Padilla",
    "section": "Take-home messages",
    "text": "Take-home messages\n\nFinally, I want to share some very important lessons I have learned so far:  \n\nThere’s no better source to understand a method than going to its original publication 📑 (yes, some of the last century!) \nDocumentation sites won’t answer many of your theoretical questions. Tutorials, if available, are more detailed materials with usage examples and practical explanations, but again, for theory and methods check the original articles.\nStay humble. If I have become aware of something these years, it is how ignorant we are, something we only learn, paradoxically, as we acquire more knowledge by studying and investigating 📚. Taking an arrogant attitude will only stop you from nourishing yourself with more learnings and ideas, and it will close doors for you. We never stop learning!"
  },
  {
    "objectID": "index.html#feedback",
    "href": "index.html#feedback",
    "title": "Daianna Gonzalez-Padilla",
    "section": "Feedback",
    "text": "Feedback\n\n💬 I hope you find these materials useful. Feel free to contact me for personal doubts, inquiries, or further discussion in any of my media shown below 👇🏼. I’d also appreciate your feedback and contributions to keep improving these contents. Good luck with your analyses!\n\n\n\n\nThe website was created using Quarto."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "My Blog",
    "section": "",
    "text": "MAGMA: How does the Gene and the Gene-Set analysis operate?\n\n\n\n\n\n\nGWAS\n\n\nGene Analysis\n\n\nGene Set Analysis\n\n\nSNP summary statistics\n\n\n\nGlobal overview of MAGMA Gene and Gene-Set analyses and detailed practical demonstration of the SNP-wise gene analysis and the competitive gene-set analysis. \n\n\n\n\n\nJul 16, 2024\n\n\nDaianna Gonzalez-Padilla\n\n\n\n\n\n\n\n\n\n\n\n\nFisher’s exact test\n\n\n\n\n\n\noverrepresentation\n\n\nenrichment\n\n\nGO\n\n\nKEGG\n\n\n\nA detailed and interpretable explanation of the Fisher’s exact test in the context of gene set enrichment analysis. \n\n\n\n\n\nJul 12, 2024\n\n\nDaianna Gonzalez-Padilla\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-07-13-Fisher_test/index.html",
    "href": "posts/2024-07-13-Fisher_test/index.html",
    "title": "Fisher’s exact test",
    "section": "",
    "text": "Introduction\nle"
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html",
    "href": "posts/2024-07-16-MAGMA/index.html",
    "title": "MAGMA: How does the Gene and the Gene-Set analysis operate?",
    "section": "",
    "text": "MAGMA stands for Multi-marker Analysis of GenoMic Annotation and is a computational tool for the analysis of the joint effect of multiple genetic markers on a phenotype based on Genome-Wide Association Study (GWAS) data. MAGMA constitutes a flexible and generalizable approach to assess the association of individual genes or gene-sets with a phenotype based on the associations that the SNPs of the genes have with the same phenotype.\nThis is a commonly used method that you’ll likely find implemented while reading about GWASes or that you’ll need to run if working with genetic variant associations and gene/gene-set analysis, so let’s see how it works."
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html#step-1",
    "href": "posts/2024-07-16-MAGMA/index.html#step-1",
    "title": "MAGMA: How does the SNP-wise Gene and the Gene-Set analysis operate?",
    "section": "Step 1:",
    "text": "Step 1:"
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html#original-publication-of-magma",
    "href": "posts/2024-07-16-MAGMA/index.html#original-publication-of-magma",
    "title": "MAGMA: How does the SNP-wise Gene and the Gene-Set analysis operate?",
    "section": "",
    "text": "de Leeuw, C. A., Mooij, J. M., Heskes, T., & Posthuma, D. (2015). MAGMA: generalized gene-set analysis of GWAS data. PLoS computational biology, 11(4), e1004219. https://doi.org/10.1371/journal.pcbi.1004219"
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html#gene-analysis",
    "href": "posts/2024-07-16-MAGMA/index.html#gene-analysis",
    "title": "MAGMA: How does the Gene and the Gene-Set analysis operate?",
    "section": "Gene analysis",
    "text": "Gene analysis\nGenetic markers are aggregated to the level of whole individual genes and those in a given gene are jointly tested for their association with the phenotype, defining in such way the association of the gene itself. This definitely allows to detect significant associations of multiple small-effect markers in a gene that individually would be missed, i.e., associations that depend on multiple markers. This also reduces the number of required tests and makes the results more interpretable by summarizing at the gene level.\nTwo alternatives for gene analysis are offered by MAGMA:\n\nMultiple linear PC regression model\nIf the input data is raw genotype data, MAGMA fits a multiple linear PC regression model to the individuals’ phenotypes. Here, for one gene \\(g\\) at a time, the SNP matrix that contains the information of the SNPs for that gene across all the \\(N\\) individuals studied, is projected onto its Principal Components (PCs). These PCs capture genotypic differences between individuals for the given gene and the first \\(K\\) most explanatory ones (comprising 99.9% of the variance) are used as predictors of the phenotype (\\(Y\\)) in the linear model.\n\n\n\n\n\nPhenotype is modeled as:\n\\[\nY = \\alpha_{0g}+X^*_{g}\\alpha_g+W\\beta_g+\\epsilon_g\n\\]\n\\[\n{\\begin{bmatrix}Y_1 \\\\ ... \\\\ Y_{N-1} \\\\ Y_N\\end{bmatrix}} = {\\begin{bmatrix}\\alpha_{0g} \\\\ ... \\\\ \\alpha_{0g} \\\\ \\alpha_{0g}\\end{bmatrix}} + \\stackrel{PC1 \\ \\  \\ \\  \\ \\ PC2 \\ \\  \\ \\  \\ \\ ...  \\ \\ \\ \\ \\ \\ PC_K} {\\begin{bmatrix}  x_{11} \\ \\ x_{12} \\ \\ ... \\ \\ x_{1K}  \\\\  ... \\\\ x_{(N-1)1} \\ \\ x_{(N-1)2} \\ \\ ... \\ \\ x_{(N-1)K} \\\\  x_{N1} \\ \\ x_{N2} \\ \\ ... \\ \\ x_{NK} \\end{bmatrix}} {\\begin{bmatrix}\\alpha_{g1} \\\\  \\alpha_{g2} \\\\ ... \\\\ \\alpha_{gK}\\end{bmatrix}} +  \\\\\n\\]\n\\[\n\\stackrel{Cov1 \\ \\  \\ \\  \\ \\ Cov2 \\ \\  \\ \\  \\ \\ ...  \\ \\ \\ \\ \\ \\ CovL}{\\begin{bmatrix}  w_{11} \\ \\ w_{12} \\ \\ ... \\ \\ w_{1L}  \\\\  ... \\\\ w_{(N-1)1} \\ \\ w_{(N-1)2} \\ \\ ... \\ \\ w_{(N-1)L} \\\\  w_{N1} \\ \\ w_{N2} \\ \\ ... \\ \\ w_{NL} \\end{bmatrix}}{\\begin{bmatrix}\\beta_{g1} \\\\  \\beta_{g2} \\\\ ... \\\\ \\beta_{gL}\\end{bmatrix}} +\n{\\begin{bmatrix}\\epsilon_{g1} \\\\ ... \\\\ \\epsilon_{g(N-1)} \\\\  \\epsilon_{gN}\\end{bmatrix}}\n\\]\nWith \\(X_{g}^*\\) the matrix of the first \\(K\\) PCs for gene \\(g\\) and \\(W\\) a matrix of additional covariates for the individuals that can be included in the model. \\(\\alpha_g\\)’s and \\(\\beta_g\\)’s are the coefficients of the PCs and covariates for the gene \\(g\\), respectively. \\(\\epsilon_g\\) is the vector of residuals and \\(\\alpha_{0g}\\) the intercept. The \\(\\alpha_g\\)’s represent the effect of the genotype for gene \\(g\\) on the phenotype (the genetic effect).\nThen an F-test is used to assess if genotypes for gene \\(g\\) have an effect on the phenotype under the null hypothesis that the genetic effect of \\(g\\) on the phenotype is 0 across all PCs (\\(H_0:\\alpha_g=\\overrightarrow 0\\)). This leads to a p-value for the association of gene \\(g\\) with the phenotype \\(Y\\) based on its genetic markers.\n\n✔️ The advantage of using PCs instead of variables for individual SNPs is that 1) the number of variables included in the linear model is reduced and 2) they allow to account for redundancy and collinearity between SNPs. Also this model offers flexibility to accommodate additional covariates to model the phenotype.\n\n\n\nSNP-wise gene analysis\nIf no raw genotype data is available, MAGMA also accepts SNP p-values from a GWAS as input. In this case SNP p-values for a gene are first transformed into Z or \\(\\chi^2\\)statistics and then combined into a gene test-statistic by the mean SNP statistic or top SNP statistic method. This gene test-statistic is then used to compute the gene p-value, either by an approximation of the sampling distribution (mean SNP statistic method) or by phenotype permutation (mean and top SNP statistic methods).\nThis SNP-wise MAGMA analysis based on SNP summary statistics requires a reference dataset with similar ancestry as the data from which SNPs p-values were computed. This is needed to account for linkage disequilibrium (LD) between SNPs. If an approximation of the sampling distribution is used to compute the gene p-value, this reference is required to obtain the SNP statistic correlation matrix \\(R\\). If phenotype permutation is chosen, these reference data are necessary to generate the gene test-statistics empirical sampling distribution.\n\nSummary: SNP p-values → SNP statistics →*gene test-statistic →* gene p-value → gene z-score (\\(z_g\\))\n\n*Gene test-statistics can be constructed from the SNP statistics applying one of the two implemented methods in MAGMA:\n\nMean SNP statistic:\n\nMean Z gene test-statistic: SNP p-values of a gene are transformed to Z-statistics and the mean (weighted or unweighted sum) of such Z-stats is used as the test-statistic of the gene: \\(T=\\sum_i^G w_iz_i\\), with \\(G\\) the total number of SNPs in the gene and \\(z_i\\) and \\(w_i\\) the Z-statistic and weight for SNP \\(i\\), respectively. These gene test-stats follow a normal distribution.\nMean \\(\\chi^2\\) gene test-statistic: the mean (weighted or unweighted sum) of the \\(-2log\\) of the SNP p-values (that are \\(\\sim\\chi^2_{(2)}\\)) is used as gene test-statistic: \\(T=-2\\sum_i^G w_i\\log(p_i)\\), with \\(p_i\\) the p-value of SNP \\(i\\). These gene test-stats are assumed to be \\(\\sim c\\chi^2_{(f)}\\), where \\(c\\) and \\(f\\) are constants of the distribution.\n\n*For both mean Z and mean \\(\\chi^2\\) gene test-statistics the p-value of the gene is obtained based on a known approximation of the sampling distribution of the gene test-stats. For such purposes, the reference dataset is needed to estimate the SNP statistic correlation matrix, from which the optional SNP weights (\\(w_i\\)) are computed to correct for dependency between SNPs. A phenotype permutation procedure can also be applied to compute empirical gene p-values (see further below).\nTop SNP statistic(s): the lowest SNP p-value among all SNPs in the gene (corresponding to the most associated SNP) or the sum of the \\(-log(p)\\) for the top most associated SNPs is used as the gene test-statistic.\n*To compute the gene p-value a phenotype permutation procedure is the only option available. Here random phenotypes are assigned to the reference data and a top gene test-statistic is computed in each permutation. The empirical gene p-value is computed as the proportion of these permuted gene test-statistics that are higher than the observed one.\n\n\n\n\n\n\n\nNote\n\n\n\nThe SNP-wise gene analysis of MAGMA can also be run with raw genotype data, in which case SNP p-values are computed internally and the raw genotype data takes place of the reference data.\n\n\nAfter running the gene analysis, either by PC regression or SNP-wise analysis, the resulting gene p-values are subsequently transformed to Z-values (\\(z_g\\)) to be introduced into the gene-set analysis. These Z-values are normally distributed and capture the association strength of the genes with the phenotype: the greater (higher positive) they are the stronger the gene association.\n\n\n\n\n\n\nCaution\n\n\n\nNote that with the gene analysis F-test (with PC regression) and gene test-statistics (with SNP-wise models) we are not really looking at the sign (+/-) of the association of the genetic markers of a gene with the phenotype, just exploring if there’s an association at all:\n\nIn the PC regression model, we only assess if all genetic effects of a gene (\\(\\alpha_g\\)’s) are zero or not, but not if the global gene effect is positive or negative.\nWith SNP-wise methods, since they are based on SNP p-values that don’t inform about the sign of the association, just how strong it is, the gene test-stats derived from them are also reflecting “sign-ignorant” associations. The gene p-value, however, is computed based on the right tail of the distribution of these gene test-stats (\\(T\\)’s) as they correspond to stronger (but not necessarily positive) associations."
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html#gene-set-analysis",
    "href": "posts/2024-07-16-MAGMA/index.html#gene-set-analysis",
    "title": "MAGMA: How does the Gene and the Gene-Set analysis operate?",
    "section": "Gene-set analysis",
    "text": "Gene-set analysis\nOnce having gene-level associations, we can now think of gene set associations. Intiatlly, we aggregate genes in groups of genes that share cellular or functional properties, such as involvements in certain biological processes, with particular molecular functions, cellular locations, cell-type specific expression or activity, or differential expression for a given condition. These define concrete processes or features we may be interested in relating with a GWAS phenotype. By doing this, we can gain insights into the potential molecules, pathways, and tissues implicated in a phenotype’s etiology.\nSince all that’s necessary from the gene analysis to run the gene-set analysis are the gene Z-values, gene-set analysis operates the same independently of the gene analysis method applied (PC regression or SNP-wise), as both result in gene p-values and respective \\(z_g\\)’s.\nTwo gene-level regression models are implemented to asses the association of gene-sets with the phenotype:\n\nSelf-contained analysis\nTests if the genes of a gene set \\(s\\) are jointly associated with the phenotype. This is assessed by an intercept-only linear regression \\(Z_s=\\beta_0\\overrightarrow1+\\epsilon_s\\), with \\(Z_s\\) the variable with the \\(z_g\\)’s of the genes in \\(s\\). With this simple model we evaluate the null \\(H_0:\\beta_0=0\\) against the alternative \\(H_A: \\beta_0&gt;0\\). This is equivalent to a one-sided single-sample t-test comparing the mean association of genes in \\(s\\) to 0. In other words, we are evaluating if the mean association of the genes in the set is greater than 0 (i.e., is a strong association, not to be confused with a positive effect of \\(s\\) on the phenotype).\n\n\n\n\n\n\n\nCompetitive analysis\nTests whether the genes in the set \\(s\\) are more strongly associated with the phenotype than the rest of genes not in the set. Here the outcome variable \\(Z\\) of the model now includes the \\(z_g\\) of all genes. We define \\(S_s\\) as a binary predictor of \\(Z\\) that equals 1 if a gene is in \\(s\\) and 0 if not: \\(Z=\\beta_{0s}\\overrightarrow1+S_s\\beta_s+\\epsilon\\).\nHere \\(\\beta_s\\) reflects the difference in the association strength of the genes in \\(s\\) versus those not in \\(s\\). The p-value of the gene set results from testing on \\(\\beta_s\\): we test \\(H_0: \\beta_s=0\\) vs \\(H_A: \\beta_s&gt;0\\), which is equivalent to a one-sided two-sample t-test evaluating if the mean association strength of genes in \\(s\\) is greater than the mean association strength of genes not in \\(s\\). But again, this doesn’t mean genes in the set \\(s\\) have a positive association with the phenotype. This analysis is performed by default.\n\n\n\n\n\n\n✔️ Both self-contained and competitive gene-set analyses are implemented through more general gene-level regression models that can accommodate combinations of gene sets and gene properties such as gene expression levels and gene size to test for their effects and correct for potential confounding effects. This can be useful, for example, to test if variables such as differential expression between tissues or conditions have an effect on the phenotype associations.\nFurther, analyzing gene sets evidently reduces the number of output tests, but note that one test per gene still has to be performed in the the previous gene analysis.\n\n\n\n\n\n\n\nImportant\n\n\n\nDue to LD between SNPs neighboring genes are usually correlated. This obligate us to assume \\(\\epsilon \\sim MVN(\\overrightarrow0, \\sigma^2R)\\) in the gene-set analysis, where \\(R\\) is the gene-gene correlation matrix."
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html#step-1-annotation-of-snps-onto-genes",
    "href": "posts/2024-07-16-MAGMA/index.html#step-1-annotation-of-snps-onto-genes",
    "title": "MAGMA: How does the Gene and the Gene-Set analysis operate?",
    "section": "Step 1: Annotation of SNPs onto genes",
    "text": "Step 1: Annotation of SNPs onto genes\nThe first step is to map all SNPs from your GWAS data onto the genes of a reference genome.\n\nInput: we need SNP and gene positions based on the same human genome reference build; we provide this in the .snploc and in the .gene.loc files, respectively.\n## .snploc file example\n## Columns: SNP ID, Chr, Position:\n\n       SNP CHR         BP \nrs62513865   8  101592213 \nrs79643588   8  106973048 \nrs17396518   8  108690829 \nrs983166     8  108681675 \nrs28842593   8  103044620 \nrs7014597    8  104152280 \nrs3134156    8  100479917 \nrs6980591    8  103144592 \nrs72670434   8  108166508\n## .gene.loc file example\n## Required columns: GeneID, Chr, Start site, Stop site:\n\nENSG00000243485 1 29554 31109 + MIR1302-2HG \nENSG00000186092 1 65419 71585 + OR4F5 \nENSG00000238009 1 89295 133723 - AL627309.1 \nENSG00000239906 1 139790 140339 - AL627309.2 \nENSG00000236601 5 180881343 180888537 - AL732372.1 \nENSG00000235146 1 523009 530148 + AC114498.1 \nENSG00000229905 1 696291 697369 + AL669831.2 \nENSG00000237491 1 714150 745440 + AL669831.5\n\n\n\n\n\n\nImportant\n\n\n\nSNPs in sexual chromosomes are usually excluded from the analysis as their inclusion brings additional analytical, statistical, and bioinformatic challenges for their analysis (Sun et al. 2023). MAGMA only supports X chromosome analysis.\n\n\nCommands: the following are the flags and inputs used to map the SNPs onto genes.\n## Run SNP annotation: \n## --annotate: flag to run annotation \n## --snp-loc: indicate file with SNP positions\n## --gene-loc: indicate file with gene positions\n## --out: prefix for output files\n\nmagma --annotate \\ \n      --snp-loc [.snploc file]\\ \n      --gene-loc [gene.loc file]\\ \n      --out [output_prefix]\nOutput: this step returns the .genes.annot file as output, containing all SNPs that were assigned to a gene.\n## .genes.annot file example\n## GeneID Chr:Start:Stop and corresponding SNP rsIDs:\n\nwindow_up = 0 \nwindow_down = 0 \nENSG00000237491 1:714150:745440 rs186002080 rs12184267 rs142557973 rs149887893 \nENSG00000177757 1:752751:755217 rs3115859 rs3131968 rs3131967 rs3115860 \nENSG00000225880 1:761586:762902 rs2286139 rs377377186 rs374493323 \nENSG00000230368 1:803451:812283 rs11240779 rs28410559 rs72631880 rs58686784"
  },
  {
    "objectID": "posts/2024-07-16-MAGMA/index.html#step-2-snp-wise-gene-analysis",
    "href": "posts/2024-07-16-MAGMA/index.html#step-2-snp-wise-gene-analysis",
    "title": "MAGMA: How does the Gene and the Gene-Set analysis operate?",
    "section": "Step 2: SNP-wise gene analysis",
    "text": "Step 2: SNP-wise gene analysis\n\nInput: we need to provide the SNP p-values in the .pval file and the gene-wise SNPs in the .genes.annot file obtained in the previous step. A reference dataset must be provided as well.\nThe total sample size (N) of the GWAS from which the SNP p-values were derived must be indicated as well using the N modifier of --pval. Alternatively, if different sample sizes were used per SNP, these can be contained in a separate column of the .pval file which specified in the ncol modifier of --pval.\n## .pval file example\n## Columns: SNP ID, SNP p-value, and optionally SNP sample size \n\n       SNP      P      N \nrs62513865 0.4847 130644 \nrs79643588 0.5605 130644 \nrs17396518 0.8145 130644 \nrs983166   0.5704 130644 \nrs28842593 0.7488 130644 \nrs7014597  0.5034 130644 \nrs3134156  0.2225 130644\nThe next is a head of the 1000 Genomes European panel data used as the reference dataset.\n## g1000_eur reference data example\n## Columns: Chr, SNP ID, Genetic distance, Position, Allele1, Allele2\n\n1 rs537182016 0 10539 A C \n1 rs575272151 0 11008 G C \n1 rs544419019 0 11012 G C \n1 rs540538026 0 13110 A G \n1 rs62635286  0 13116 G T \n1 rs200579949 0 13118 G A \nCommands: these are the flags used to run the SNP-wise mean Z stats method.\n## Reference data used was the 1000 Genomes European data\n## Run gene analysis based on SNP p-values\n## --bfile\n## --pval\n## --gene-annot\n## --out\n\nmagma \n--bfile g1000_eur\\ \n## SNP p-values as input; \n## indicate colname for sample size of the study (N) \n--pval $ANNOT_PREFIX.pval ncol=N\\ \n## Provide output file from step 1 with gene SNPs \n--gene-annot $OUTPUT_PREFIX.genes.annot\\ \n--out $OUTPUT_PREFIX"
  }
]